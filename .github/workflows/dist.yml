name: dist
on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:
    name: dist
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build: [stm32f3, stm32f4, lpc55, lpc55-stage0, stm32h743, stm32h753, gemini, rot-carrier, rot-carrier-stage0, gimletlet, gimlet-b, gimlet-b-lab, gimlet-c, gimlet-c-lab, sidecar-b, sidecar-b-lab, sidecar-c, sidecar-c-lab, psc-a, psc-b, stm32g0, gimlet-rot-b, gimlet-rot-b-stage0, gimlet-rot-b-stage0-lab, gimlet-rot-c, gimlet-rot-c-stage0, gimlet-rot-c-stage0-lab, donglet-g031]
        include:
          - build: stm32g0
            app_name: demo-stm32g070-nucleo
            app_toml: app/demo-stm32g0-nucleo/app-g070.toml
            target: thumbv6m-none-eabi
            image: default
          - build: stm32f3
            app_name: demo-stm32f3-discovery
            app_toml: app/demo-stm32f4-discovery/app-f3.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: stm32f4
            app_name: demo-stm32f4-discovery
            app_toml: app/demo-stm32f4-discovery/app.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: lpc55
            app_name: lpc55xpresso
            app_toml: app/lpc55xpresso/app.toml
            target: thumbv8m.main-none-eabihf
            image: a
          - build: lpc55-stage0
            app_name: lpc55xpresso
            app_toml: app/lpc55xpresso/stage0.toml
            target: thumbv8m.main-none-eabihf
            image: stage0
          - build: stm32h743
            app_name: demo-stm32h743-nucleo
            app_toml: app/demo-stm32h7-nucleo/app-h743.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: stm32h753
            app_name: demo-stm32h753-nucleo
            app_toml: app/demo-stm32h7-nucleo/app-h753.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: gemini
            app_name: gemini-bu
            app_toml: app/gemini-bu/app.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: rot-carrier
            app_name: rot-carrier
            app_toml: app/rot-carrier/app.toml
            target: thumbv8m.main-none-eabihf
            image: a
          - build: rot-carrier-stage0
            app_name: rot-carrier
            app_toml: app/rot-carrier/stage0.toml
            target: thumbv8m.main-none-eabihf
            image: stage0
          - build: gimletlet
            app_name: gimletlet
            app_toml: app/gimletlet/app.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: gimlet-b
            app_name: gimlet-b
            app_toml: app/gimlet/rev-b.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: gimlet-b-lab
            app_name: gimlet-b-lab
            app_toml: app/gimlet/rev-b-lab.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: gimlet-c
            app_name: gimlet-c
            app_toml: app/gimlet/rev-c.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: gimlet-c-lab
            app_name: gimlet-c-lab
            app_toml: app/gimlet/rev-c-lab.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: sidecar-b
            app_name: sidecar-b
            app_toml: app/sidecar/rev-b.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: sidecar-b-lab
            app_name: sidecar-b-lab
            app_toml: app/sidecar/rev-b-lab.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: sidecar-c
            app_name: sidecar-c
            app_toml: app/sidecar/rev-c.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: sidecar-c-lab
            app_name: sidecar-c-lab
            app_toml: app/sidecar/rev-c-lab.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: psc-a
            app_name: psc-a
            app_toml: app/psc/rev-a.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: psc-b
            app_name: psc-b
            app_toml: app/psc/rev-b.toml
            target: thumbv7em-none-eabihf
            image: default
          - build: gimlet-rot-b
            app_name: gimlet-rot-b
            app_toml: app/gimlet-rot/app-b.toml
            target: thumbv8m.main-none-eabihf
            image: a
          - build: gimlet-rot-b-stage0
            app_name: gimlet-rot-b
            app_toml: app/gimlet-rot/stage0-b.toml
            target: thumbv8m.main-none-eabihf
            image: stage0
          - build: gimlet-rot-b-stage0-lab
            app_name: gimlet-rot-b-lab
            app_toml: app/gimlet-rot/stage0-b-lab.toml
            target: thumbv8m.main-none-eabihf
            image: stage0
          - build: gimlet-rot-c
            app_name: gimlet-rot-c
            app_toml: app/gimlet-rot/app-c.toml
            target: thumbv8m.main-none-eabihf
            image: a
          - build: gimlet-rot-c-stage0
            app_name: gimlet-rot-c
            app_toml: app/gimlet-rot/stage0-c.toml
            target: thumbv8m.main-none-eabihf
            image: stage0
          - build: gimlet-rot-c-stage0-lab
            app_name: gimlet-rot-c-lab
            app_toml: app/gimlet-rot/stage0-c-lab.toml
            target: thumbv8m.main-none-eabihf
            image: stage0
          - build: donglet-g031
            app_name: donglet-g031
            app_toml: app/donglet/app-g031.toml
            target: thumbv6m-none-eabi
            image: default
          - os: ubuntu-latest
          - os: windows-latest
    env:
      VCPKGRS_DYNAMIC: 1

    steps:
      # check out our code
      - uses: actions/checkout@v3

      # install rust toolchain
      - name: Install Rust toolchain
        run: rustup show

      - name: Cache build output
        uses: Swatinem/rust-cache@v2

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: C:\vcpkg\downloads
          key: ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-
            ${{ runner.os }}-vcpkg-download-

      # invoke our build
      - name: cargo xtask dist
        env:
          RUST_BACKTRACE: 1
        run: cargo xtask dist ${{ matrix.app_toml}}

      - name: Fetch Humility
        uses: dsaltares/fetch-gh-release-asset@master
        if: matrix.os == 'ubuntu-latest'
        with:
          repo: "oxidecomputer/humility"
          version: "59047694"
          file: "humility"
          target: "target/release/humility"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Humility manifest
        # we need to chmod because all artifacts are marked as non-executable
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install libusb-1.0-0-dev libftdi1-dev
          sudo chmod +x target/release/humility
          target/release/humility -a target/${{ matrix.app_name }}/dist/${{ matrix.image }}/build-${{ matrix.app_name }}.zip manifest

      # upload the output of our build
      - name: Upload build archive
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.os }}-${{ matrix.build }}
          path: target/${{ matrix.app_name }}/dist/${{ matrix.image }}/build-${{ matrix.app_name }}.zip
