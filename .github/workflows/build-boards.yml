name: build-gimlet
on:
  workflow_call:
    inputs:
      board-set:
        description: "Which set to build"
        required: true
        type: string
      os:
        description: "OS to build for"
        required: true
        type: string

jobs:
  build-sidecar:
    if: ${{ inputs.board-set == 'sidecar' || inputs.board-set == 'all' }}
    name: build-sidecar
    strategy:
      matrix:
        build: [sidecar-b, sidecar-b-lab, sidecar-b-dev, sidecar-c, sidecar-c-lab, sidecar-c-dev, sidecar-d, sidecar-d-lab, sidecar-d-dev]
        include:
          - build: sidecar-b
            app_name: sidecar-b
            app_toml: app/sidecar/rev-b.toml
            image: default
          - build: sidecar-b-lab
            app_name: sidecar-b-lab
            app_toml: app/sidecar/rev-b-lab.toml
            image: default
          - build: sidecar-b-dev
            app_name: sidecar-b-dev
            app_toml: app/sidecar/rev-b-dev.toml
            image: default
          - build: sidecar-c
            app_name: sidecar-c
            app_toml: app/sidecar/rev-c.toml
            image: default
          - build: sidecar-c-lab
            app_name: sidecar-c-lab
            app_toml: app/sidecar/rev-c-lab.toml
            image: default
          - build: sidecar-c-dev
            app_name: sidecar-c-dev
            app_toml: app/sidecar/rev-c-dev.toml
            image: default
          - build: sidecar-d
            app_name: sidecar-d
            app_toml: app/sidecar/rev-d.toml
            image: default
          - build: sidecar-d-lab
            app_name: sidecar-d-lab
            app_toml: app/sidecar/rev-d-lab.toml
            image: default
          - build: sidecar-d-dev
            app_name: sidecar-d-dev
            app_toml: app/sidecar/rev-d-dev.toml
            image: default
    uses: ./.github/workflows/build-one.yml
    with:
      build: ${{ matrix.build }}
      app_name: ${{ matrix.app_name }}
      app_toml: ${{ matrix.app_toml }}
      image: ${{ matrix.image }}
      os: ${{ inputs.os }}

  build-psc:
    if: ${{ inputs.board-set == 'psc' || inputs.board-set == 'all' }}
    name: build-psc
    strategy:
      matrix:
        build: [psc-b, psc-b-dev, psc-c, psc-c-dev]
        include:
          - build: psc-b
            app_name: psc-b
            app_toml: app/psc/rev-b.toml
            image: default
          - build: psc-b-dev
            app_name: psc-b-dev
            app_toml: app/psc/rev-b-dev.toml
            image: default
          - build: psc-c
            app_name: psc-c
            app_toml: app/psc/rev-c.toml
            image: default
          - build: psc-c-dev
            app_name: psc-c-dev
            app_toml: app/psc/rev-c-dev.toml
            image: default
    uses: ./.github/workflows/build-one.yml
    with:
      build: ${{ matrix.build }}
      app_name: ${{ matrix.app_name }}
      app_toml: ${{ matrix.app_toml }}
      image: ${{ matrix.image }}
      os: ${{ inputs.os }}

  build-rot:
    if: ${{ inputs.board-set == 'rot' || inputs.board-set == 'all' }}
    name: build-rot
    strategy:
      matrix:
        build: [oxide-rot-1, oxide-rot-1-dev]
        include:
          - build: oxide-rot-1
            app_name: oxide-rot-1
            app_toml: app/oxide-rot-1/app.toml
            image: "a, b"
          - build: oxide-rot-1-dev
            app_name: oxide-rot-1-dev
            app_toml: app/oxide-rot-1/app-dev.toml
            image: "a, b"
    uses: ./.github/workflows/build-one.yml
    with:
      build: ${{ matrix.build }}
      app_name: ${{ matrix.app_name }}
      app_toml: ${{ matrix.app_toml }}
      image: ${{ matrix.image }}
      os: ${{ inputs.os }}

  build-gimlet:
    if: ${{ inputs.board-set == 'gimlet' || inputs.board-set == 'all' }}
    name: build-gimlet
    strategy:
      matrix:
        build: [gimlet-b, gimlet-b-lab, gimlet-b-dev, gimlet-c, gimlet-c-lab, gimlet-c-dev, gimlet-d, gimlet-d-lab, gimlet-d-dev, gimlet-e, gimlet-e-lab, gimlet-e-dev, gimlet-f, gimlet-f-lab, gimlet-f-dev]
        include:
          - build: gimlet-b
            app_name: gimlet-b
            app_toml: app/gimlet/rev-b.toml
            image: default
          - build: gimlet-b-lab
            app_name: gimlet-b-lab
            app_toml: app/gimlet/rev-b-lab.toml
            image: default
          - build: gimlet-b-dev
            app_name: gimlet-b-dev
            app_toml: app/gimlet/rev-b-dev.toml
            image: default
          - build: gimlet-c
            app_name: gimlet-c
            app_toml: app/gimlet/rev-c.toml
            image: default
          - build: gimlet-c-lab
            app_name: gimlet-c-lab
            app_toml: app/gimlet/rev-c-lab.toml
            image: default
          - build: gimlet-c-dev
            app_name: gimlet-c-dev
            app_toml: app/gimlet/rev-c-dev.toml
            image: default
          - build: gimlet-d
            app_name: gimlet-d
            app_toml: app/gimlet/rev-d.toml
            image: default
          - build: gimlet-d-lab
            app_name: gimlet-d-lab
            app_toml: app/gimlet/rev-d-lab.toml
            image: default
          - build: gimlet-d-dev
            app_name: gimlet-d-dev
            app_toml: app/gimlet/rev-d-dev.toml
            image: default
          - build: gimlet-e
            app_name: gimlet-e
            app_toml: app/gimlet/rev-e.toml
            image: default
          - build: gimlet-e-lab
            app_name: gimlet-e-lab
            app_toml: app/gimlet/rev-e-lab.toml
            image: default
          - build: gimlet-e-dev
            app_name: gimlet-e-dev
            app_toml: app/gimlet/rev-e-dev.toml
            image: default
          - build: gimlet-f
            app_name: gimlet-f
            app_toml: app/gimlet/rev-f.toml
            image: default
          - build: gimlet-f-lab
            app_name: gimlet-f-lab
            app_toml: app/gimlet/rev-f-lab.toml
            image: default
          - build: gimlet-f-dev
            app_name: gimlet-f-dev
            app_toml: app/gimlet/rev-f-dev.toml
            image: default
    uses: ./.github/workflows/build-one.yml
    with:
      build: ${{ matrix.build }}
      app_name: ${{ matrix.app_name }}
      app_toml: ${{ matrix.app_toml }}
      image: ${{ matrix.image }}
      os: ${{ inputs.os }}

  build-devboards:
    if: ${{ inputs.board-set == 'devboards' || inputs.board-set == 'all' }}
    name: build-devboards
    strategy:
      matrix:
        build: [stm32f3, stm32f4, lpc55, stm32h743, stm32h753, gemini, rot-carrier, gimletlet, donglet-g031]
        include:
          - build: stm32g0
            app_name: demo-stm32g070-nucleo
            app_toml: app/demo-stm32g0-nucleo/app-g070.toml
            image: default
          - build: stm32f3
            app_name: demo-stm32f3-discovery
            app_toml: app/demo-stm32f4-discovery/app-f3.toml
            image: default
          - build: stm32f4
            app_name: demo-stm32f4-discovery
            app_toml: app/demo-stm32f4-discovery/app.toml
            image: default
          - build: lpc55
            app_name: lpc55xpresso
            app_toml: app/lpc55xpresso/app.toml
            image: "a, b"
          - build: stm32h743
            app_name: demo-stm32h743-nucleo
            app_toml: app/demo-stm32h7-nucleo/app-h743.toml
            image: default
          - build: stm32h753
            app_name: demo-stm32h753-nucleo
            app_toml: app/demo-stm32h7-nucleo/app-h753.toml
            image: default
          - build: gemini
            app_name: gemini-bu
            app_toml: app/gemini-bu/app.toml
            image: default
          - build: rot-carrier
            app_name: rot-carrier
            app_toml: app/rot-carrier/app.toml
            image: "a, b"
          - build: gimletlet
            app_name: gimletlet
            app_toml: app/gimletlet/app.toml
            image: default
          - build: donglet-g031
            app_name: donglet-g031
            app_toml: app/donglet/app-g031.toml
            image: default
    uses: ./.github/workflows/build-one.yml
    with:
      build: ${{ matrix.build }}
      app_name: ${{ matrix.app_name }}
      app_toml: ${{ matrix.app_toml }}
      image: ${{ matrix.image }}
      os: ${{ inputs.os }}
