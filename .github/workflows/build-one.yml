name: build-one
on:
  workflow_call:
    inputs:
      build:
        description: "Name output for the build"
        required: true
        type: string
      app_name:
        description: "Application directory name"
        required: true
        type: string
      app_toml:
        description: "TOML file name (must be app directory)"
        required: true
        type: string
      image:
        description: "Comma separated string of image names to build"
        required: true
        type: string
      os:
        description: "OS to build for"
        required: true
        type: string

jobs:
  build-one:
     name: "${{ inputs.app_name }}/${{ inputs.app_toml}}"
     runs-on: ${{ inputs.os }}
     env:
       VCPKGRS_DYNAMIC: 1
     steps:

      # check out our code
      - uses: actions/checkout@v4

      # install rust toolchain
      - name: Install Rust toolchain
        run: |
          rustup show
          rustup component add clippy

      - name: Cache build output
        uses: Swatinem/rust-cache@v2

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: C:\vcpkg\downloads
          key: ${{ runner.os }}-vcpkg-download-${{ inputs.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-download-${{ inputs.os }}-
            ${{ runner.os }}-vcpkg-download-

      # invoke our build
      - name: cargo xtask dist
        env:
          RUST_BACKTRACE: 1
        run: cargo xtask dist ${{ inputs.app_toml}}

      # upload the output of our build
      - name: Upload build archive
        uses: actions/upload-artifact@v3
        if: inputs.os == 'ubuntu-latest'
        with:
          name: dist-${{ inputs.os }}-${{ inputs.build }}
          path: target/${{ inputs.app_name }}/dist/build-${{ inputs.app_name }}-image-*.zip
