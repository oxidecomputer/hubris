{
    "type": "addrmap",
    "addr_span_bytes": 36,
    "inst_name": "espi_regs",
    "addr_offset": 0,
    "children": [
        {
            "type": "reg",
            "inst_name": "flags",
            "addr_offset": 0,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "alert",
                    "lsb": 0,
                    "msb": 0,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Sticky bit for alert, set to 1 when alert is needed, cleared by writing 1"
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "control",
            "addr_offset": 4,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "dbg_mode_en",
                    "lsb": 0,
                    "msb": 0,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Set to one mux in the debug FIFOs and ignore the real eSPI interface"
                },
                {
                    "type": "field",
                    "inst_name": "resp_fifo_reset",
                    "lsb": 1,
                    "msb": 1,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Set to one to reset response FIFO. Cleared by hardware after reset."
                },
                {
                    "type": "field",
                    "inst_name": "cmd_size_fifo_reset",
                    "lsb": 2,
                    "msb": 2,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Set to one to reset the command size FIFO. Cleared by hardware after reset."
                },
                {
                    "type": "field",
                    "inst_name": "cmd_fifo_reset",
                    "lsb": 3,
                    "msb": 3,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Set to one to reset the command FIFO. Cleared by hardware after reset."
                },
                {
                    "type": "field",
                    "inst_name": "msg_en",
                    "lsb": 4,
                    "msb": 4,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Respond back on periph 0 channel vs oob"
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "status",
            "addr_offset": 8,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "busy",
                    "lsb": 0,
                    "msb": 0,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Set to one to 1 when hw is running the spi transaction, no new transactions\nmay be issued until it is finished. Technically represents cs_n being low."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "fifo_status",
            "addr_offset": 12,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "resp_used_wds",
                    "lsb": 0,
                    "msb": 15,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Show used FIFO words in response FIFO (word = 32bits/4 bytes),\n1024 words so 4kB"
                },
                {
                    "type": "field",
                    "inst_name": "cmd_used_wds",
                    "lsb": 16,
                    "msb": 31,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Show used words in command FIFO (word = 32bits/4 bytes),\n1024 words so 4kB"
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "cmd_fifo_wdata",
            "addr_offset": 16,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "fifo_data",
                    "lsb": 0,
                    "msb": 31,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Writing stores data in fifo"
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "resp_fifo_rdata",
            "addr_offset": 20,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "fifo_data",
                    "lsb": 0,
                    "msb": 31,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Note: Reading side-effects the data by popping the fifo"
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "cmd_size_fifo_wdata",
            "addr_offset": 24,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "fifo_data",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "store command byte size in fifo. Because we are sending 4bytes at a time into the fifo, but only reading\n1 byte at a time, we need to store the number of cmd bytes in the fifo. This allows queueing up multiple commands\nif desired. left over data bytes are discarded if this fifo is empty and there are <4 bytes left in cmd_fifo"
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "uart_thresh",
            "addr_offset": 28,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "bytes",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 32,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": ""
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "last_post_code",
            "addr_offset": 32,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "payload",
                    "lsb": 0,
                    "msb": 31,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "MSB is bit 31"
                }
            ]
        }
    ]
}