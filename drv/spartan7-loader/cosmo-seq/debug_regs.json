{
    "type": "addrmap",
    "addr_span_bytes": 48,
    "inst_name": "debug_regs",
    "addr_offset": 0,
    "children": [
        {
            "type": "reg",
            "inst_name": "uart_control",
            "addr_offset": 0,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "sp5_to_header",
                    "lsb": 0,
                    "msb": 0,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Set to 1 to send the SP5's console UART out the UART debug header. By default\nthis is muxed to the SP's console UART, setting this takes the data away from the SP and \nsends it out the debug header with flow control."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp_axi_to_console_uart_usedwds",
            "addr_offset": 4,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "usedwds",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Number of FIFO bytes pending transmit *to* the SP, should stay near 0 when the SP is\nreceiving bytes at a reasonable rate. This is effectively 1/2 the buffer in this flow as the\nUART to the SP5 also has a FIFO."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp_console_uart_to_axi_usedwds",
            "addr_offset": 8,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "usedwds",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Number of FIFO bytes pending transmit *to* the SP5, should stay near 0 when the SP5 is\nreceiving bytes at a reasonable rate. This is effectively 1/2 the buffer in this flow as the\nUART to the SP5 also has a FIFO."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp5_axi_to_console_uart_usedwds",
            "addr_offset": 12,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "usedwds",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Number of FIFO bytes pending transmit *to* the SP5, should stay near 0 when the SP5 is\nreceiving bytes at a reasonable rate. This is effectively 1/2 the buffer in this flow as the\nUART to the SP also has a FIFO."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp5_console_uart_to_axi_usedwds",
            "addr_offset": 16,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "usedwds",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Number of FIFO bytes pending transmit *to* the SP, should stay near 0 when the SP is\nreceiving bytes at a reasonable rate. This is effectively 1/2 the buffer in this flow as the\nUART to the SP also has a FIFO."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "uart_pin_status",
            "addr_offset": 20,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "console_sp5_cts_l",
                    "lsb": 0,
                    "msb": 0,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "SP5 console UART CTS_L (to SP5 pins, output from FPGA)"
                },
                {
                    "type": "field",
                    "inst_name": "console_sp5_rts_l",
                    "lsb": 1,
                    "msb": 1,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "SP5 console UART RTS_L (from SP5 pins, input to FPGA)"
                },
                {
                    "type": "field",
                    "inst_name": "console_sp_cts_l",
                    "lsb": 4,
                    "msb": 4,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "SP console UART CTS_L (to SP5 pins, output from FPGA)"
                },
                {
                    "type": "field",
                    "inst_name": "console_sp_rts_l",
                    "lsb": 5,
                    "msb": 5,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "SP console UART RTS_L (from SP pins, input to FPGA)"
                },
                {
                    "type": "field",
                    "inst_name": "ipcc_sp_cts_l",
                    "lsb": 8,
                    "msb": 8,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "SP ipcc UART CTS_L (from SP pins, input to FPGA)"
                },
                {
                    "type": "field",
                    "inst_name": "ipcc_sp_rts_l",
                    "lsb": 9,
                    "msb": 9,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "SP ipcc UART RTS_L (from SP pins, input to FPGA)"
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp5_axi_to_ipcc_uart_usedwds",
            "addr_offset": 24,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "usedwds",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Number of FIFO bytes pending transmit *to* the SP, should stay near 0 when the SP is\nreceiving bytes at a reasonable rate (from SP5 over eSPI)."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp5_ipcc_uart_to_axi_usedwds",
            "addr_offset": 28,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "usedwds",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Number of FIFO bytes pending transmit *to* the SP5, should average near 0 when the SP5 is\nreceiving bytes at a reasonable rate, but is bursty over eSPI."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp5_dbg2_toggle_counter",
            "addr_offset": 32,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "cnts",
                    "lsb": 0,
                    "msb": 31,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Saturating u32 counter that counts the number of times the SP5 DBG2 pin has toggled in this a0 power cycle."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "sp5_dbg2_toggle_timer",
            "addr_offset": 36,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "cnts",
                    "lsb": 0,
                    "msb": 31,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Saturating u32 counter that counts the number 8ns clock cycles since last SP5 DBG2 pin toggle in this a0 power cycle."
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "dbg_1v8_ctrl",
            "addr_offset": 40,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "pins1_0",
                    "lsb": 0,
                    "msb": 7,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Selects which debug output is sent to the 1v8 debug header in sets of two pins.\nFor i2c buses the highest bit is the clock, the next bit is the data.\nFor UARTs the highest bit is the 'from FPGA' side the next bit is the 'to FPGA' side.\nEspi buses have defined pins (TBD) to match standard debug setup.",
                    "encode": [
                        {
                            "name": "NONE",
                            "value": 0
                        },
                        {
                            "name": "i2c_dimm0_bus",
                            "value": 1
                        },
                        {
                            "name": "i2c_dimm1_bus",
                            "value": 2
                        },
                        {
                            "name": "i2c_sp5_dimm0_bus",
                            "value": 3
                        },
                        {
                            "name": "i2c_sp5_dimm1_bus",
                            "value": 4
                        },
                        {
                            "name": "i2c_sp5_hp_bus",
                            "value": 5
                        },
                        {
                            "name": "i2c_sp_mux_bus",
                            "value": 6
                        },
                        {
                            "name": "espi_bus",
                            "value": 7
                        },
                        {
                            "name": "sp_console_bus",
                            "value": 8
                        },
                        {
                            "name": "sp5_console_bus",
                            "value": 9
                        },
                        {
                            "name": "sp_ipcc_bus",
                            "value": 10
                        },
                        {
                            "name": "t6_sequencer",
                            "value": 11
                        },
                        {
                            "name": "mux1_sel",
                            "value": 12
                        },
                        {
                            "name": "mux2_sel",
                            "value": 13
                        },
                        {
                            "name": "mux3_sel",
                            "value": 14
                        }
                    ]
                },
                {
                    "type": "field",
                    "inst_name": "pins3_2",
                    "lsb": 8,
                    "msb": 15,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Selects which debug output is sent to the 1v8 debug header in sets of two pins.\nFor i2c buses the highest bit is the clock, the next bit is the data.\nFor UARTs the highest bit is the 'from FPGA' side the next bit is the 'to FPGA' side.\nEspi buses have defined pins (TBD) to match standard debug setup.",
                    "encode": [
                        {
                            "name": "NONE",
                            "value": 0
                        },
                        {
                            "name": "i2c_dimm0_bus",
                            "value": 1
                        },
                        {
                            "name": "i2c_dimm1_bus",
                            "value": 2
                        },
                        {
                            "name": "i2c_sp5_dimm0_bus",
                            "value": 3
                        },
                        {
                            "name": "i2c_sp5_dimm1_bus",
                            "value": 4
                        },
                        {
                            "name": "i2c_sp5_hp_bus",
                            "value": 5
                        },
                        {
                            "name": "i2c_sp_mux_bus",
                            "value": 6
                        },
                        {
                            "name": "espi_bus",
                            "value": 7
                        },
                        {
                            "name": "sp_console_bus",
                            "value": 8
                        },
                        {
                            "name": "sp5_console_bus",
                            "value": 9
                        },
                        {
                            "name": "sp_ipcc_bus",
                            "value": 10
                        },
                        {
                            "name": "t6_sequencer",
                            "value": 11
                        },
                        {
                            "name": "mux1_sel",
                            "value": 12
                        },
                        {
                            "name": "mux2_sel",
                            "value": 13
                        },
                        {
                            "name": "mux3_sel",
                            "value": 14
                        }
                    ]
                },
                {
                    "type": "field",
                    "inst_name": "pins5_4",
                    "lsb": 16,
                    "msb": 23,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Selects which debug output is sent to the 1v8 debug header in sets of two pins.\nFor i2c buses the highest bit is the clock, the next bit is the data.\nFor UARTs the highest bit is the 'from FPGA' side the next bit is the 'to FPGA' side.\nEspi buses have defined pins (TBD) to match standard debug setup.",
                    "encode": [
                        {
                            "name": "NONE",
                            "value": 0
                        },
                        {
                            "name": "i2c_dimm0_bus",
                            "value": 1
                        },
                        {
                            "name": "i2c_dimm1_bus",
                            "value": 2
                        },
                        {
                            "name": "i2c_sp5_dimm0_bus",
                            "value": 3
                        },
                        {
                            "name": "i2c_sp5_dimm1_bus",
                            "value": 4
                        },
                        {
                            "name": "i2c_sp5_hp_bus",
                            "value": 5
                        },
                        {
                            "name": "i2c_sp_mux_bus",
                            "value": 6
                        },
                        {
                            "name": "espi_bus",
                            "value": 7
                        },
                        {
                            "name": "sp_console_bus",
                            "value": 8
                        },
                        {
                            "name": "sp5_console_bus",
                            "value": 9
                        },
                        {
                            "name": "sp_ipcc_bus",
                            "value": 10
                        },
                        {
                            "name": "t6_sequencer",
                            "value": 11
                        },
                        {
                            "name": "mux1_sel",
                            "value": 12
                        },
                        {
                            "name": "mux2_sel",
                            "value": 13
                        },
                        {
                            "name": "mux3_sel",
                            "value": 14
                        }
                    ]
                },
                {
                    "type": "field",
                    "inst_name": "pins7_6",
                    "lsb": 24,
                    "msb": 31,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "Selects which debug output is sent to the 1v8 debug header in sets of two pins.\nFor i2c buses the highest bit is the clock, the next bit is the data.\nFor UARTs the highest bit is the 'from FPGA' side the next bit is the 'to FPGA' side.\nEspi buses have defined pins (TBD) to match standard debug setup.",
                    "encode": [
                        {
                            "name": "NONE",
                            "value": 0
                        },
                        {
                            "name": "i2c_dimm0_bus",
                            "value": 1
                        },
                        {
                            "name": "i2c_dimm1_bus",
                            "value": 2
                        },
                        {
                            "name": "i2c_sp5_dimm0_bus",
                            "value": 3
                        },
                        {
                            "name": "i2c_sp5_dimm1_bus",
                            "value": 4
                        },
                        {
                            "name": "i2c_sp5_hp_bus",
                            "value": 5
                        },
                        {
                            "name": "i2c_sp_mux_bus",
                            "value": 6
                        },
                        {
                            "name": "espi_bus",
                            "value": 7
                        },
                        {
                            "name": "sp_console_bus",
                            "value": 8
                        },
                        {
                            "name": "sp5_console_bus",
                            "value": 9
                        },
                        {
                            "name": "sp_ipcc_bus",
                            "value": 10
                        },
                        {
                            "name": "t6_sequencer",
                            "value": 11
                        },
                        {
                            "name": "mux1_sel",
                            "value": 12
                        },
                        {
                            "name": "mux2_sel",
                            "value": 13
                        },
                        {
                            "name": "mux3_sel",
                            "value": 14
                        }
                    ]
                }
            ]
        },
        {
            "type": "reg",
            "inst_name": "dbg_convenience",
            "addr_offset": 44,
            "regwidth": 32,
            "min_accesswidth": 32,
            "children": [
                {
                    "type": "field",
                    "inst_name": "espi_dbg_x1_en",
                    "lsb": 0,
                    "msb": 0,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "convenience bit for setting up x1 espi debug out.. This uses 1v8 debug header pins 7..2. Hw clears"
                },
                {
                    "type": "field",
                    "inst_name": "espi_dbg_x4_en",
                    "lsb": 1,
                    "msb": 1,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "convenience bit for setting up x4 espi debug out. This uses 1v8 debug header pins 7..0. Hw clears"
                },
                {
                    "type": "field",
                    "inst_name": "t6_seq_en",
                    "lsb": 2,
                    "msb": 2,
                    "reset": 0,
                    "sw_access": "rw",
                    "se_onread": null,
                    "se_onwrite": null,
                    "desc": "convenience bit for setting up T6 sequencing debug out. This uses 1v8 debug header pins 7..0. Hw clears"
                }
            ]
        }
    ]
}