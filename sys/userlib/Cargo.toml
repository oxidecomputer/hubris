[package]
name = "userlib"
version = "0.1.0"
edition = "2021"

[features]
panic-messages = []
log-itm = []
log-semihosting = []
log-null = []

[dependencies]
bstringify = { workspace = true }
cfg-if = { workspace = true }
num-derive = { workspace = true }
num-traits = { workspace = true }
paste = { workspace = true }
serde = { workspace = true }
ssmarshal = { workspace = true }
zerocopy = { workspace = true }

abi = {path = "../abi"}
armv6m-atomic-hack = {path = "../../lib/armv6m-atomic-hack"}
unwrap-lite = { path = "../../lib/unwrap-lite" }

[target.thumbv7em-none-eabihf.dependencies]
# Note: we don't use cortex-m directly, this is here to ensure that the
# feature is consistently specified in all tasks, to reduce overbuilding
# of the PACs.
cortex-m = { workspace = true }

# We're repeating this a bazillion times because Cargo only gives us two
# options: (1) define on the entire target triple, or (2) define on
# target_arch, which Cargo rounds down to "arm". i.e. we can't detect
# Cortex-Ms specifically. Thanks, Cargo.
[target.thumbv7m-none-eabi.dependencies]
cortex-m = { workspace = true }
[target.thumbv7em-none-eabi.dependencies]
cortex-m = { workspace = true }
[target.thumbv6m-none-eabi.dependencies]
cortex-m = { workspace = true }
[target."thumbv8m.main-none-eabihf".dependencies]
cortex-m = { workspace = true }

[build-dependencies]
build-util = { path = "../../build/util" }

[lib]
test = false
bench = false
