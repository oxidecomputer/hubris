name = "gimlet"
target = "thumbv7em-none-eabihf"
board = "gimlet-1"
stacksize = 1024

[kernel]
path = "."
name = "gimlet"
requires = {flash = 32768, ram = 4096}
#
# For the kernel (and for any task that logs), we are required to enable
# either "itm" (denoting logging/panicking via ARM's Instrumentation Trace
# Macrocell) or "semihosting" (denoting logging/panicking via ARM
# semihosting).  We are biased to ITM because semihosting is excruciatingly
# slow (it is breakpoint based) and has an undesirable failure mode if logging
# output is generated and debugger is not attached (namely, the target stops).
# If one does choose to change this to semihosting for purposes of
# development, be sure to also change it in every task of interest.
#
features = ["itm"]

[supervisor]
notification = 1

# Flash sections are mapped into flash bank 1 (of 2).
[outputs.flash]
address = 0x08000000
size = 1048576
read = true
execute = true

# RAM sections are currently mapped into DTCM, a small but fast SRAM.
[outputs.ram]
address = 0x20000000
size = 131072
read = true
write = true
execute = false  # let's assume XN until proven otherwise

[tasks.jefe]
path = "../../task/jefe"
name = "task-jefe"
priority = 0
requires = {flash = 16384, ram = 2048}
start = true
features = ["itm"]
stacksize = 1536

[tasks.rcc_driver]
path = "../../drv/stm32h7-rcc"
name = "drv-stm32h7-rcc"
features = ["h753"]
priority = 1
requires = {flash = 8192, ram = 1024}
uses = ["rcc"]
start = true

[tasks.gpio_driver]
path = "../../drv/stm32h7-gpio"
name = "drv-stm32h7-gpio"
features = ["h753"]
priority = 2
requires = {flash = 8192, ram = 1024}
uses = ["gpios1", "gpios2", "gpios3"]
start = true

[tasks.gpio_driver.task-slots]
rcc_driver = "rcc_driver"

[tasks.spi4_driver]
path = "../../drv/stm32h7-spi-server"
name = "drv-stm32h7-spi-server"
priority = 2
requires = {flash = 16384, ram = 4096}
features = ["spi4", "h753"]
uses = ["spi4"]
start = true
interrupts = {84 = 1}
stacksize = 1000

[tasks.spi4_driver.task-slots]
gpio_driver = "gpio_driver"
rcc_driver = "rcc_driver"

[tasks.spi2_driver]
path = "../../drv/stm32h7-spi-server"
name = "drv-stm32h7-spi-server"
priority = 2
requires = {flash = 16384, ram = 4096}
features = ["spi2", "h753"]
uses = ["spi2"]
start = true
interrupts = {36 = 1}
stacksize = 1000

[tasks.spi2_driver.task-slots]
gpio_driver = "gpio_driver"
rcc_driver = "rcc_driver"

[tasks.i2c_driver]
path = "../../drv/stm32h7-i2c-server"
name = "drv-stm32h7-i2c-server"
features = ["h753", "itm"]
priority = 2
requires = {flash = 16384, ram = 2048}
uses = ["i2c2", "i2c3", "i2c4"]
start = true

[tasks.i2c_driver.interrupts]
33 = 0b0000_0010        # I2C2 event
34 = 0b0000_0010        # I2C2 error
72 = 0b0000_0100        # I2C3 event
73 = 0b0000_0100        # I2C3 error
95 = 0b0000_1000        # I2C4 event
96 = 0b0000_1000        # I2C4 error

[tasks.i2c_driver.task-slots]
gpio_driver = "gpio_driver"
rcc_driver = "rcc_driver"

[tasks.spd]
path = "../../task/spd"
name = "task-spd"
features = ["h753", "itm"]
priority = 2
requires = {flash = 16384, ram = 16384}
uses = ["i2c1"]
start = true

[tasks.spd.interrupts]
31 = 0b0000_0001        # I2C1 event
32 = 0b0000_0001        # I2C1 error

[tasks.spd.task-slots]
rcc_driver = "rcc_driver"
gpio_driver = "gpio_driver"
i2c_driver = "i2c_driver"

[tasks.thermal]
path = "../../task/thermal"
name = "task-thermal"
features = ["itm", "h753"]
priority = 3
requires = {flash = 65536, ram = 8192 }
stacksize = 2048
start = true

[tasks.thermal.task-slots]
i2c_driver = "i2c_driver"

[tasks.hiffy]
path = "../../task/hiffy"
name = "task-hiffy"
features = ["h753", "stm32h7", "itm", "i2c", "gpio", "spi", "qspi"]
priority = 3
requires = {flash = 32768, ram = 32768 }
start = true

[tasks.hiffy.task-slots]
gpio_driver = "gpio_driver"
hf = "hf"
i2c_driver = "i2c_driver"

[tasks.gimlet_seq]
path = "../../drv/gimlet-seq-server"
name = "drv-gimlet-seq-server"
features = ["h753"]
priority = 3
requires = {flash = 32768, ram = 1024 }
stacksize = 1024
start = true

[tasks.gimlet_seq.task-slots]
gpio_driver = "gpio_driver"
spi_driver = "spi2_driver"
i2c_driver = "i2c_driver"

[tasks.hf]
path = "../../drv/gimlet-hf-server"
name = "drv-gimlet-hf-server"
features = ["h753"]
priority = 3
requires = {flash = 16384, ram = 2048 }
stacksize = 2048
start = true
uses = ["quadspi"]
interrupts = {92 = 1}

[tasks.hf.task-slots]
gpio_driver = "gpio_driver"
rcc_driver = "rcc_driver"

[tasks.idle]
path = "../../task/idle"
name = "task-idle"
priority = 5
requires = {flash = 256, ram = 256}
stacksize = 256
start = true

[peripherals.rcc]
address = 0x58024400
size = 1024

[peripherals.gpios1]
address = 0x58020000
size = 0x2000

[peripherals.gpios2]
address = 0x58022000
size = 0x0800

[peripherals.gpios3]
address = 0x58022800
size = 0x0400

[peripherals.spi2]
address = 0x40003800
size = 1024

[peripherals.spi4]
address = 0x40013400
size = 1024

[peripherals.usart3]
address = 0x40004800
size = 1024

[peripherals.i2c1]
address = 0x40005400
size = 1024

[peripherals.i2c2]
address = 0x40005800
size = 1024

[peripherals.i2c3]
address = 0x40005c00
size = 1024

[peripherals.i2c4]
address = 0x58001c00
size = 1024

[peripherals.quadspi]
address = 0x52005000
size = 4096

[config]

#
# I2C1: SPD proxy bus
#
[[config.i2c.controllers]]
controller = 1
target = true

#
# SMBUS_SPD_PROXY_SP3_TO_SP_SMCLK
# SMBUS_SPD_PROXY_SP3_TO_SP_SMDAT
#
[config.i2c.controllers.ports.B]
name = "spd"
description = "SPD proxy"
pins = [ { pins = [ 0, 1 ], af = 4 } ]

#
# I2C2: Front/M.2 bus
#
[[config.i2c.controllers]]
controller = 2

#
# SMBUS_SP_TO_M2_SMCLK_A2_V3P3
# SMBUS_SP_TO_M2_SMDAT_A2_V3P3
#
[config.i2c.controllers.ports.B]
name = "m2"
description = "M.2 bus"
pins = [ { pins = [ 10, 11 ], af = 4 } ]
muxes = [ { driver = "pca9548", address = 0x73 } ]

#
# SMBUS_SP_TO_LVL_FRONT_SMDAT
# SMBUS_SP_TO_LVL_FRONT_SMCLK
#
[config.i2c.controllers.ports.F]
name = "front"
description = "Front bus"
pins = [ { pins = [ 0, 1 ], af = 4 } ]

#
# Shark fin muxes
#
[[config.i2c.controllers.ports.F.muxes]]
driver = "pca9548"
address = 0x70

[[config.i2c.controllers.ports.F.muxes]]
driver = "pca9548"
address = 0x71

[[config.i2c.controllers.ports.F.muxes]]
driver = "pca9548"
address = 0x72

#
# I2C3: Mid bus
#
[[config.i2c.controllers]]
controller = 3

#
# SMBUS_SP_TO_LVL_MID_SMCLK
# SMBUS_SP_TO_LVL_MID_SMDAT
#
[config.i2c.controllers.ports.H]
name = "mid"
description = "Mid bus"
pins = [ { pins = [ 7, 8 ], af = 4 } ]

#
# I2C4: Rear bus
#
[[config.i2c.controllers]]
controller = 4

#
# SMBUS_SP_TO_LVL_REAR_SMCLK
# SMBUS_SP_TO_LVL_REAR_SMDAT
#
[config.i2c.controllers.ports.F]
name = "rear"
description = "Rear bus"
pins = [ { pins = [ 14, 15 ], af = 4 } ]

[[config.i2c.devices]]
bus = "front"
address = 0x48
device = "tmp117"
name = "zone1"
description = "Front temperature sensor (zone 1)"
removable = true

[[config.i2c.devices]]
bus = "front"
address = 0x49
device = "tmp117"
name = "zone2"
description = "Front temperature sensor (zone 2)"
removable = true

[[config.i2c.devices]]
bus = "front"
address = 0x4a
device = "tmp117"
name = "zone3"
description = "Front temperature sensor (zone 3)"
removable = true

[[config.i2c.devices]]
bus = "front"
address = 0x70
device = "pca9545"
description = "U.2 ABCD mux"

[[config.i2c.devices]]
bus = "front"
address = 0x71
device = "pca9545"
description = "U.2 EFGH mux"

[[config.i2c.devices]]
bus = "front"
address = 0x72
device = "pca9545"
description = "U.2 IJ mux"

[[config.i2c.devices]]
bus = "m2"
address = 0x73
device = "pca9545"
description = "M.2 mux"

[[config.i2c.devices]]
bus = "mid"
address = 0x24
device = "tps546b24a"
description = "A2 3.3V rail"
pmbus = { rails = [ "V3P3_SP_A2" ] }
refdes = "U522"

[[config.i2c.devices]]
bus = "mid"
address = 0x27
device = "tps546b24a"
description = "A2 1.8V rail"
pmbus = { rails = [ "V1P8_SP3" ] }
refdes = "U523"

[[config.i2c.devices]]
bus = "mid"
address = 0x29
device = "tps546b24a"
description = "A2 5V rail"
pmbus = { rails = [ "V5_SYS_A2" ] }
refdes = "U524"

[[config.i2c.devices]]
bus = "mid"
address = 0x3a
device = "max5970"
description = "M.2 hot plug controller"

[[config.i2c.devices]]
bus = "mid"
address = 0x58
device = "idt8a34004"
description = "Clock generator"

[[config.i2c.devices]]
bus = "mid"
address = 0x5a
device = "raa229618"
description = "CPU power controller"
pmbus = { rails = [ "VDD_VCORE", "VDD_MEM_ABCD" ] }
refdes = "U350"

[[config.i2c.devices]]
bus = "mid"
address = 0x5b
device = "raa229618"
description = "SoC power controller"
pmbus = { rails = [ "VDDCR_SOC", "VDD_MEM_EFGH" ] }
refdes = "U351"

[[config.i2c.devices]]
bus = "mid"
address = 0x5c
device = "isl68224"
description = "DIMM ABCD power controller"
pmbus = { rails = [ "VPP_ABCD", "V3P3_SYS", "" ] }
refdes = "U352"

[[config.i2c.devices]]
bus = "mid"
address = 0x5d
device = "isl68224"
description = "DIMM EFGH power controller"
pmbus = { rails = [ "VPP_EFGH", "", "" ] }
refdes = "U418"

[[config.i2c.devices]]
bus = "rear"
address = 0x10
device = "adm1272"
description = "Fan hot swap controller"
pmbus = { rails = [ "V54_FAN" ] }
refdes = "U419"

[[config.i2c.devices]]
bus = "rear"
address = 0x14
device = "adm1272"
description = "Sled hot swap controller"
pmbus = { rails = [ "V54_HS_OUTPUT" ] }
refdes = "U452"

[[config.i2c.devices]]
bus = "rear"
address = 0x20
device = "max31790"
description = "Fan controller"

[[config.i2c.devices]]
bus = "rear"
address = 0x48
device = "tmp117"
name = "zone1"
description = "Rear temperature sensor (zone 1)"
removable = true

[[config.i2c.devices]]
bus = "rear"
address = 0x49
device = "tmp117"
name = "zone2"
description = "Rear temperature sensor (zone 2)"
removable = true

[[config.i2c.devices]]
bus = "rear"
address = 0x4a
device = "tmp117"
name = "zone3"
description = "Rear temperature sensor (zone 3)"
removable = true

[[config.i2c.devices]]
bus = "rear"
address = 0x4c
device = "tmp451"
description = "T6 temperature sensor"

[[config.i2c.devices]]
bus = "rear"
address = 0x5f
device = "isl68224"
description = "T6 power controller"
pmbus = { rails = [ "V0P96_NIC_VDD" ] }
refdes = "U357"

[[config.i2c.devices]]
bus = "rear"
address = 0x67
device = "bmr491"
description = "IBC"
pmbus = { rails = [ "V12_SYS_A2" ] }
refdes = "U431"

