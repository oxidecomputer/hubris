name = "gimletlet-mgmt"
target = "thumbv7em-none-eabihf"
board = "gimletlet-1"
chip = "../../chips/stm32h7.toml"
stacksize = 1024

[kernel]
path = "."
name = "gimletlet"
requires = {flash = 32768, ram = 4096}
#
# For the kernel (and for any task that logs), we are required to enable
# either "itm" (denoting logging/panicking via ARM's Instrumentation Trace
# Macrocell) or "semihosting" (denoting logging/panicking via ARM
# semihosting).  We are biased to ITM because semihosting is excruciatingly
# slow (it is breakpoint based) and has an undesirable failure mode if logging
# output is generated and debugger is not attached (namely, the target stops).
# If one does choose to change this to semihosting for purposes of
# development, be sure to also change it in every task of interest.
#
features = ["itm"]

[supervisor]
notification = 1

# Flash sections are mapped into flash bank 1 (of 2).
[outputs.flash]
address = 0x08000000
size = 1048576
read = true
execute = true

# RAM sections are currently mapped into DTCM, a small but fast SRAM.
[outputs.ram]
address = 0x20000000
size = 131072
read = true
write = true
execute = false  # let's assume XN until proven otherwise

# Network buffers are placed in sram1, which is directly accessible by the
# Ethernet MAC.
[outputs.sram1]
address = 0x30000000
size = 0x20000
read = true
write = true
dma = true

[tasks.jefe]
path = "../../task/jefe"
name = "task-jefe"
priority = 0
requires = {flash = 8192, ram = 2048}
start = true
features = ["itm"]
stacksize = 1536

[tasks.sys]
path = "../../drv/stm32xx-sys"
name = "drv-stm32xx-sys"
features = ["h753"]
priority = 1
requires = {flash = 2048, ram = 1024}
uses = ["rcc", "gpios1", "gpios2", "gpios3"]
start = true

[tasks.spi2_driver]
path = "../../drv/stm32h7-spi-server"
name = "drv-stm32h7-spi-server"
priority = 2
requires = {flash = 16384, ram = 4096}
features = ["spi2", "h753"]
uses = ["spi2"]
start = true
interrupts = {"spi2.irq" = 1}
stacksize = 1000
task-slots = ["sys"]

[tasks.spi2_driver.config.spi]
global_config = "spi2"

[tasks.user_leds]
path = "../../drv/user-leds"
name = "drv-user-leds"
features = ["stm32h7"]
priority = 2
requires = {flash = 2048, ram = 1024}
start = true
task-slots = ["sys"]

[tasks.hiffy]
path = "../../task/hiffy"
name = "task-hiffy"
features = ["h753", "stm32h7", "itm", "gpio", "spi"]
priority = 3
requires = {flash = 16384, ram = 16384 }
stacksize = 2048
start = true
task-slots = ["sys", "user_leds"]

[tasks.net]
path = "../../task/net"
name = "task-net"
stacksize = 3800
priority = 2
features = ["mgmt", "h753"]
requires = {flash = 131072, ram = 16384, sram1 = 16384}
sections = {eth_bulk = "sram1"}
uses = ["eth", "eth_dma"]
start = true
interrupts = {"eth.irq" = 0b1}
task-slots = ["sys", "user_leds", { spi_driver = "spi2_driver" }]

[tasks.udpecho]
path = "../../task/udpecho"
name = "task-udpecho"
priority = 3
requires = {flash = 16384, ram = 8192}
stacksize = 4096
start = true
task-slots = ["net"]

[tasks.udpbroadcast]
path = "../../task/udpbroadcast"
name = "task-udpbroadcast"
priority = 3
requires = {flash = 16384, ram = 8192}
stacksize = 4096
start = true
task-slots = ["net"]

[tasks.idle]
path = "../../task/idle"
name = "task-idle"
priority = 5
requires = {flash = 128, ram = 256}
stacksize = 256
start = true

[config.spi.spi2]
controller = 2

[config.spi.spi2.mux_options.port_i]
outputs = [
    {port = "I", pins = [1, 3], af = 5},
]
input = {port = "I", pin = 2, af = 5}

[config.spi.spi2.devices.spi2_header]
mux = "port_i"
cs = {port = "I", pin = 0}

[config.net]

[config.net.sockets.echo]
kind = "udp"
owner = {name = "udpecho", notification = 1}
port = 7
tx = { packets = 3, bytes = 1024 }
rx = { packets = 3, bytes = 1024 }

[config.net.sockets.broadcast]
kind = "udp"
owner = {name = "udpbroadcast", notification = 1}
port = 8
tx = { packets = 3, bytes = 1024 }
rx = { packets = 3, bytes = 1024 }
