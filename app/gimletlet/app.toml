name = "gimletlet"
target = "thumbv7em-none-eabihf"
board = "gimletlet-2"
chip = "../../chips/stm32h7"
stacksize = 896

[kernel]
name = "gimletlet"
requires = {flash = 32768, ram = 8192}
#
# For the kernel (and for any task that logs), we are required to enable
# either "itm" (denoting logging/panicking via ARM's Instrumentation Trace
# Macrocell) or "semihosting" (denoting logging/panicking via ARM
# semihosting).  We are biased to ITM because semihosting is excruciatingly
# slow (it is breakpoint based) and has an undesirable failure mode if logging
# output is generated and debugger is not attached (namely, the target stops).
# If one does choose to change this to semihosting for purposes of
# development, be sure to also change it in every task of interest.
#
features = ["itm"]

# Flash sections are mapped into flash bank 1 (of 2).
[outputs.flash]
address = 0x08000000
size = 1048576
read = true
execute = true

# RAM sections are currently mapped into DTCM, a small but fast SRAM.
[outputs.ram]
address = 0x20000000
size = 131072
read = true
write = true
execute = false  # let's assume XN until proven otherwise

# Network buffers are placed in sram1, which is directly accessible by the
# Ethernet MAC.
[outputs.sram1]
address = 0x30000000
size = 0x20000
read = true
write = true
dma = true

[tasks.jefe]
name = "task-jefe"
priority = 0
max-sizes = {flash = 8192, ram = 2048}
start = true
features = ["itm"]
stacksize = 1536

[tasks.sys]
name = "drv-stm32xx-sys"
features = ["h753"]
priority = 1
max-sizes = {flash = 2048, ram = 1024}
uses = ["rcc", "gpios1", "gpios2", "gpios3"]
start = true

[tasks.i2c_driver]
name = "drv-stm32h7-i2c-server"
features = ["h753", "itm"]
priority = 2
max-sizes = {flash = 16384, ram = 2048}
uses = ["i2c2", "i2c3", "i2c4"]
start = true
task-slots = ["sys"]

[tasks.i2c_driver.interrupts]
"i2c2.event" = 0b0000_0010
"i2c2.error" = 0b0000_0010
"i2c3.event" = 0b0000_0100
"i2c3.error" = 0b0000_0100
"i2c4.event" = 0b0000_1000
"i2c4.error" = 0b0000_1000

[tasks.spi_driver]
name = "drv-stm32h7-spi-server"
priority = 2
max-sizes = {flash = 16384, ram = 2048}
features = ["spi4", "h753"]
uses = ["spi4"]
start = true
interrupts = {"spi4.irq" = 1}
stacksize = 880
task-slots = ["sys"]

[tasks.spi_driver.config.spi]
global_config = "spi4"

[tasks.user_leds]
name = "drv-user-leds"
features = ["stm32h7"]
priority = 2
max-sizes = {flash = 2048, ram = 1024}
start = true
task-slots = ["sys"]

[tasks.pong]
name = "task-pong"
priority = 3
max-sizes = {flash = 1024, ram = 1024}
start = true
task-slots = ["user_leds"]

[tasks.uartecho]
name = "task-uartecho"
features = ["stm32h753", "usart2"]
uses = ["usart2"]
interrupts = {"usart2.irq" = 1}
priority = 3
max-sizes = {flash = 8192, ram = 4096}
stacksize = 2048
start = true
task-slots = ["sys"]

[tasks.hiffy]
name = "task-hiffy"
features = ["h753", "stm32h7", "itm", "i2c", "gpio", "spi", "qspi", "rng", "update"]
priority = 4
max-sizes = {flash = 32768, ram = 32768}
stacksize = 2048
start = true
task-slots = ["hf", "sys", "i2c_driver", "user_leds", "rng_driver", "update_server"]

[tasks.hf]
name = "drv-gimlet-hf-server"
features = ["h753"]
priority = 3
max-sizes = {flash = 16384, ram = 2048}
stacksize = 1920
start = true
uses = ["quadspi"]
interrupts = {"quadspi.irq" = 1}
task-slots = ["sys"]

[tasks.net]
name = "task-net"
stacksize = 4320
priority = 3
features = ["h753", "h7-vlan", "gimletlet-nic"]
max-sizes = {flash = 65536, ram = 16384, sram1 = 16384}
sections = {eth_bulk = "sram1"}
uses = ["eth", "eth_dma", "system_flash"]
start = true
interrupts = {"eth.irq" = 0b1}
task-slots = ["sys", "spi_driver" ]

[tasks.udpecho]
name = "task-udpecho"
priority = 4
max-sizes = {flash = 8192, ram = 8192}
stacksize = 4096
start = true
task-slots = ["net"]
features = ["vlan"]

[tasks.validate]
name = "task-validate"
priority = 3
max-sizes = {flash = 32768, ram = 4096}
stacksize = 1024
start = true
task-slots = ["i2c_driver"]

[tasks.idle]
name = "task-idle"
priority = 5
max-sizes = {flash = 128, ram = 256}
stacksize = 256
start = true

[tasks.rng_driver]
features = ["h753"]
name = "drv-stm32h7-rng"
priority = 3
max-sizes = {flash = 8192, ram = 512}
uses = ["rng"]
start = true
stacksize = 256
task-slots = ["sys", "user_leds"]

[tasks.update_server]
name = "stm32h7-update-server"
priority = 3
max-sizes = {flash = 8192, ram = 4096}
stacksize = 2048
start = true
uses = ["flash_controller", "bank2"]

[config]
[[config.i2c.controllers]]
controller = 2

[[config.i2c.controllers.ports.F.pins]]
pins = [ 0, 1 ]
af = 4

[[config.i2c.controllers]]
controller = 3

#
# Note that I2C3 on Gimletlet is a bit unusual in that its SCL and SDA are on
# two different ports (port A and port C, respectively); we therefore have two
# pin structures for I2C3, but for purposes of the abstraction that i2c
# exports to consumers, we adhere to the convention outlined in the
# definition of `PortIndex` and name the logical port C after the GPIO pin that
# corresponds to SDA.
#
[[config.i2c.controllers.ports.C.pins]]
gpio_port = "A"
pins = [ 8 ]
af = 4

[[config.i2c.controllers.ports.C.pins]]
gpio_port = "C"
pins = [ 9 ]
af = 4

[[config.i2c.controllers]]
controller = 4

[[config.i2c.controllers.ports.F.pins]]
pins = [ 14, 15 ]
af = 4

[config.spi.spi3]
controller = 3

[config.spi.spi3.mux_options.port_c]
outputs = [
    {port = "C", pins = [10, 12], af = 6},
]
input = {port = "C", pin = 11, af = 6}

[config.spi.spi3.devices.spi3_header]
mux = "port_c"
cs = [{port = "A", pin = 15}]


[config.spi.spi4]
controller = 4

[config.spi.spi4.mux_options.port_e]
outputs = [
    {port = "E", pins = [12, 14], af = 5},
]
input = {port = "E", pin = 13, af = 5}

[config.spi.spi4.devices.spi4_header]
mux = "port_e"
cs = [{port = "E", pin = 11}]

[config.net]
vlan = { start = 0x301, count = 2 }

[config.net.sockets.echo]
kind = "udp"
owner = {name = "udpecho", notification = 1}
port = 7
tx = { packets = 3, bytes = 1024 }
rx = { packets = 3, bytes = 1024 }
