name = "gimletlet-vsc7448"
target = "thumbv7em-none-eabihf"
board = "gimletlet-2"
chip = "../../chips/stm32h7"
stacksize = 896

[kernel]
name = "gimletlet"
requires = {flash = 32768, ram = 4096}

[tasks.jefe]
name = "task-jefe"
priority = 0
max-sizes = {flash = 8192, ram = 2048}
start = true
features = ["itm"]
stacksize = 1536

[tasks.jefe.config.allowed-callers]
set_reset_reason = ["sys"]
request_reset = ["hiffy"]

[tasks.sys]
name = "drv-stm32xx-sys"
features = ["h753"]
priority = 1
max-sizes = {flash = 2048, ram = 1024}
uses = ["rcc", "gpios1", "gpios2", "gpios3", "system_flash"]
start = true
task-slots = ["jefe"]

[tasks.i2c_driver]
name = "drv-stm32xx-i2c-server"
features = ["h753", "itm"]
priority = 2
max-sizes = {flash = 16384, ram = 2048}
uses = ["i2c3", "i2c4"]
start = true
task-slots = ["sys"]

[tasks.i2c_driver.interrupts]
"i2c3.event" = 0b0000_0100
"i2c3.error" = 0b0000_0100
"i2c4.event" = 0b0000_1000
"i2c4.error" = 0b0000_1000

[tasks.user_leds]
name = "drv-user-leds"
features = ["stm32h7"]
priority = 2
max-sizes = {flash = 2048, ram = 1024}
start = true
task-slots = ["sys"]

[tasks.hiffy]
name = "task-hiffy"
features = ["h753", "stm32h7", "itm", "i2c", "gpio"]
priority = 3
max-sizes = {flash = 32768, ram = 32768 }
stacksize = 2048
start = true
task-slots = ["sys", "i2c_driver", "user_leds"]

[tasks.monorail]
name = "task-monorail-server"
priority = 3
max-sizes = {flash = 131072, ram = 8192}
features = ["leds", "use-spi-core", "h753"]
stacksize = 4096
start = true
task-slots = ["sys", "user_leds"]
interrupts = {"spi4.irq" = 1}
uses = ["spi4"]
config.spi.global_config = "spi4"

[tasks.idle]
name = "task-idle"
priority = 5
max-sizes = {flash = 128, ram = 256}
stacksize = 256
start = true

[config]
[[config.i2c.controllers]]
controller = 2
target = true

[[config.i2c.controllers.ports.F.pins]]
pins = [ 0, 1 ]
af = 4

[[config.i2c.controllers]]
controller = 3

#
# Note that I2C3 on Gimletlet is a bit unusual in that its SCL and SDA are on
# two different ports (port A and port C, respectively); we therefore have two
# pin structures for I2C3, but for purposes of the abstraction that i2c
# exports to consumers, we adhere to the convention outlined in the
# definition of `PortIndex` and name the logical port C after the GPIO pin that
# corresponds to SDA.
#
[[config.i2c.controllers.ports.C.pins]]
gpio_port = "A"
pins = [ 8 ]
af = 4

[[config.i2c.controllers.ports.C.pins]]
gpio_port = "C"
pins = [ 9 ]
af = 4

[[config.i2c.controllers]]
controller = 4

[[config.i2c.controllers.ports.F.pins]]
pins = [ 14, 15 ]
af = 4


[config.spi.spi3]
controller = 3

[config.spi.spi3.mux_options.port_c]
outputs = [
    {port = "C", pins = [10, 12], af = 6},
]
input = {port = "C", pin = 11, af = 6}

[config.spi.spi3.devices.spi3_header]
mux = "port_c"
cs = [{port = "A", pin = 15}]


[config.spi.spi4]
controller = 4

[config.spi.spi4.mux_options.port_e]
outputs = [
    {port = "E", pins = [12, 14], af = 5},
]
input = {port = "E", pin = 13, af = 5}

[config.spi.spi4.devices.spi4_header]
mux = "port_e"
cs = [{port = "E", pin = 11}]

[config.spi.spi6]
controller = 6

[config.spi.spi6.mux_options.port_g]
outputs = [
    {port = "G", pins = [13, 14], af = 5},
]
input = {port = "E", pin = 12, af = 5}

[config.spi.spi6.devices.spi6_header]
mux = "port_g"
cs = [{port = "G", pin = 8}]
