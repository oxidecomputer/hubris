name = "gimletlet"
target = "thumbv7em-none-eabihf"
board = "gimletlet-2"
chip = "../../chips/stm32h7.toml"
stacksize = 896

[kernel]
path = "."
name = "gimletlet"
requires = {flash = 32768, ram = 4096}
#
# For the kernel (and for any task that logs), we are required to enable
# either "itm" (denoting logging/panicking via ARM's Instrumentation Trace
# Macrocell) or "semihosting" (denoting logging/panicking via ARM
# semihosting).  We are biased to ITM because semihosting is excruciatingly
# slow (it is breakpoint based) and has an undesirable failure mode if logging
# output is generated and debugger is not attached (namely, the target stops).
# If one does choose to change this to semihosting for purposes of
# development, be sure to also change it in every task of interest.
#
features = ["itm"]

[supervisor]
notification = 1

# Flash sections are mapped into flash bank 1 (of 2).
[outputs.flash]
address = 0x08000000
size = 1048576
read = true
execute = true

# RAM sections are currently mapped into DTCM, a small but fast SRAM.
[outputs.ram]
address = 0x20000000
size = 131072
read = true
write = true
execute = false  # let's assume XN until proven otherwise

[tasks.jefe]
path = "../../task/jefe"
name = "task-jefe"
priority = 0
requires = {flash = 8192, ram = 2048}
start = true
features = ["itm"]
stacksize = 1536

[tasks.sys]
path = "../../drv/stm32xx-sys"
name = "drv-stm32xx-sys"
features = ["h753"]
priority = 1
requires = {flash = 2048, ram = 1024}
uses = ["rcc", "gpios1", "gpios2", "gpios3"]
start = true

[tasks.usart_driver]
path = "../../drv/stm32h7-usart"
name = "drv-stm32h7-usart"
features = ["h753"]
priority = 2
requires = { flash = 8192, ram = 1024}
uses = ["usart3"]
start = true
interrupts = {39 = 1}
task-slots = ["sys"]

[tasks.i2c_driver]
path = "../../drv/stm32h7-i2c-server"
name = "drv-stm32h7-i2c-server"
features = ["h753", "itm", "target-enable"]
priority = 2
requires = {flash = 16384, ram = 2048}
uses = ["i2c3", "i2c4"]
start = true
task-slots = ["sys"]

[tasks.i2c_driver.interrupts]
72 = 0b0000_0100        # I2C3 event
73 = 0b0000_0100        # I2C3 error
95 = 0b0000_1000        # I2C4 event
96 = 0b0000_1000        # I2C4 error

[tasks.spd]
path = "../../task/spd"
name = "task-spd"
features = ["h753", "itm"]
priority = 2
requires = {flash = 16384, ram = 16384}
uses = ["i2c2"]
start = true
task-slots = ["sys", "i2c_driver"]

[tasks.spd.interrupts]
33 = 0b0000_0010        # I2C2 event
34 = 0b0000_0010        # I2C2 error

#
# SPI interrupts:
#   spi1 = 35
#   spi2 = 36
#   spi3 = 51
#   spi4 = 84
#   spi5 = 85
#   spi6 = 86
#
[tasks.spi4_driver]
path = "../../drv/stm32h7-spi-server"
name = "drv-stm32h7-spi-server"
priority = 2
requires = {flash = 16384, ram = 2048}
features = ["spi4", "h753"]
uses = ["spi4"]
start = true
interrupts = {84 = 1}
stacksize = 880
task-slots = ["sys"]

[tasks.spi4_driver.config.spi]
global_config = "spi4"

[tasks.user_leds]
path = "../../drv/user-leds"
name = "drv-user-leds"
features = ["stm32h7"]
priority = 2
requires = {flash = 2048, ram = 1024}
start = true
task-slots = ["sys"]

[tasks.pong]
path = "../../task/pong"
name = "task-pong"
priority = 3
requires = {flash = 1024, ram = 1024}
start = true
task-slots = ["user_leds"]

[tasks.hiffy]
path = "../../task/hiffy"
name = "task-hiffy"
features = ["h753", "stm32h7", "itm", "i2c", "gpio", "spi", "qspi"]
priority = 3
requires = {flash = 32768, ram = 32768 }
stacksize = 2048
start = true
task-slots = ["hf", "sys", "i2c_driver", "user_leds"]

[tasks.hf]
path = "../../drv/gimlet-hf-server"
name = "drv-gimlet-hf-server"
features = ["h753"]
priority = 3
requires = {flash = 8192, ram = 2048 }
stacksize = 1920
start = true
uses = ["quadspi"]
interrupts = {92 = 1}
task-slots = ["sys"]

[tasks.vsc7448]
path = "../../task/vsc7448"
name = "task-vsc7448"
priority = 3
requires = {flash = 131072, ram = 4096}
stacksize = 2048
start = true
task-slots = ["sys", { spi_driver = "spi4_driver" }]

[tasks.idle]
path = "../../task/idle"
name = "task-idle"
priority = 5
requires = {flash = 128, ram = 256}
stacksize = 256
start = true

[config]
[[config.i2c.controllers]]
controller = 2
target = true

[[config.i2c.controllers.ports.F.pins]]
pins = [ 0, 1 ]
af = 4

[[config.i2c.controllers]]
controller = 3

#
# Note that I2C3 on Gimletlet is a bit unusual in that its SCL and SDA are on
# two different ports (port A and port C, respectively); we therefore have two
# pin structures for I2C3, but for purposes of the abstraction that i2c
# exports to consumers, we adhere to the convention outlined in the
# definition of `PortIndex` and name the logical port C after the GPIO pin that
# corresponds to SDA.
#
[[config.i2c.controllers.ports.C.pins]]
gpio_port = "A"
pins = [ 8 ]
af = 4

[[config.i2c.controllers.ports.C.pins]]
gpio_port = "C"
pins = [ 9 ]
af = 4

[[config.i2c.controllers]]
controller = 4

[[config.i2c.controllers.ports.F.pins]]
pins = [ 14, 15 ]
af = 4


[config.spi.spi3]
controller = 3

[config.spi.spi3.mux_options.port_c]
outputs = [
    {port = "C", pins = [10, 12], af = 6},
]
input = {port = "C", pin = 11, af = 6}

[config.spi.spi3.devices.spi3_header]
mux = "port_c"
cs = {port = "A", pin = 15}


[config.spi.spi4]
controller = 4

[config.spi.spi4.mux_options.port_e]
outputs = [
    {port = "E", pins = [12, 13], af = 5},
]
input = {port = "E", pin = 14, af = 5}

[config.spi.spi4.devices.spi4_header]
mux = "port_e"
cs = {port = "E", pin = 11}


[config.spi.spi6]
controller = 6

[config.spi.spi6.mux_options.port_g]
outputs = [
    {port = "G", pins = [13, 14], af = 5},
]
input = {port = "E", pin = 12, af = 5}

[config.spi.spi6.devices.spi6_header]
mux = "port_g"
cs = {port = "G", pin = 8}
