// Thermal API

Interface(
    name: "Thermal",
    ops: {
        "set_mode_manual": (
            args: {
                "initial_pwm": "u8",
            },
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "set_mode_auto": (
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "get_mode": (
            reply: Result(
                ok: "ThermalMode",
                err: CLike("ThermalError"),
            ),
            encoding: Ssmarshal
        ),
        "get_auto_state": (
            reply: Result(
                ok: "ThermalAutoState",
                err: CLike("ThermalError"),
            ),
            encoding: Ssmarshal
        ),
        "set_fan_pwm": (
            args: {
                "index": "u8",
                "pwm": "u8",
            },
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "disable_watchdog": (
            args: {},
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "enable_watchdog": (
            args: {
                "timeout_s": "u8",
            },
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "set_pid": (
            args: {
                "z": "f32",
                "p": "f32",
                "i": "f32",
                "d": "f32",
            },
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "get_margin": (
            doc: "Returns the current thermal margin, which is >= 0 and controls over-cooling",
            reply: Result(
                ok: "f32",
                err: CLike("ThermalError"),
            ),
        ),
        "set_margin": (
            doc: "Sets the thermal margin, which must be >= 0 and controls over-cooling",
            args: {
                "margin": "f32",
            },
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "update_dynamic_input": (
            doc: "Provides a thermal model for a dynamic sensor",
            args: {
                "index": "usize",
                "model": "ThermalProperties",
            },
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "remove_dynamic_input": (
            doc: "Removes the given dynamic input, so it is no longer used in the control loop",
            args: {
                "index": "usize",
            },
            reply: Result(
                ok: "()",
                err: CLike("ThermalError"),
            ),
        ),
        "get_runtime": (
            doc: "Get the most recent runtime of the thermal loop, in milliseconds",
            reply: Result(
                ok: "u64",
                err: CLike("ThermalError"),
            ),
        ),
    },
)
