// STM32xx "system" IPC API

Interface(
    name: "Sys",
    ops: {
        "enable_clock_raw": (
            args: {
                "peripheral": "u32",
            },
            reply: Result(
                ok: "()",
                err: CLike("RccError"),
            ),
            idempotent: true,
        ),
        "disable_clock_raw": (
            args: {
                "peripheral": "u32",
            },
            reply: Result(
                ok: "()",
                err: CLike("RccError"),
            ),
            idempotent: true,
        ),
        "enter_reset_raw": (
            args: {
                "peripheral": "u32",
            },
            reply: Result(
                ok: "()",
                err: CLike("RccError"),
            ),
            idempotent: true,
        ),
        "leave_reset_raw": (
            args: {
                "peripheral": "u32",
            },
            reply: Result(
                ok: "()",
                err: CLike("RccError"),
            ),
            idempotent: true,
        ),
        "gpio_configure_raw": (
            args: {
                "port": (
                    type: "Port",
                    recv: FromPrimitive("u8"),
                ),
                "pins": "u16",
                "packed_attributes": "u16",
            },
            reply: Simple("()"),
            idempotent: true,
        ),
        "gpio_set_reset": (
            args: {
                "port": (
                    type: "Port",
                    recv: FromPrimitive("u8"),
                ),
                "set_pins": "u16",
                "reset_pins": "u16",
            },
            reply: Simple("()"),
            idempotent: true,
        ),
        "gpio_read_input": (
            args: {
                "port": (
                    type: "Port",
                    recv: FromPrimitive("u8"),
                ),
            },
            reply: Simple("u16"),
            idempotent: true,
        ),
        "gpio_toggle": (
            args: {
                "port": (
                    type: "Port",
                    recv: FromPrimitive("u8"),
                ),
                "pins": "u16",
            },
            reply: Result(
                ok: "()",
                err: ServerDeath,
            ),
        ),
        "read_uid": (
            args: {},
            reply: Simple("[u32; 3]"),
            idempotent: true,
        ),
    },
)
